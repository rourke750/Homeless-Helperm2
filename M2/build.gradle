//Set a default task, so if you don't provide any, these will be executed.

//Import a bunch of Java related tasks to help you
//By default production code should be in src/main/java
//Test code should be in src/test/java
//Resources to put in the jar should be in src/main/resources
//This gives you a lot of tasks predefined for java, but the most important is build
//build will compile the code, run the tests, and make the jar file.
//also used a lot is clean, which will delete all the files made by build
//also available is assemble which will compile the code but not run the test
//also available is check which will compile and run the tests

apply plugin: 'java'

task myJavadocs(type: Javadoc) {
  source = sourceSets.main.allJava
  classpath = configurations.compile
}

apply plugin: 'application'
//set up some variables
sourceCompatibility = 1.8
version = '1.0'
mainClassName = 'edu.gatech.oad.antlab.pkg1.AntLabMain'

dependencies {
    compile name: 'resources'
    runtime name: 'resources'
	  //testCompile group: 'junit', name: 'junit', version: '4.+'
}

//setup a location for repositories of any libraries that need to be downloaded
repositories {
   mavenCentral()
   flatDir {
       dirs 'src/main/resources/'
   }
}

//Define the contents of the jar file
jar  {
  manifest {
     attributes  'Implementation-Title' : 'Gradle Quickstart' ,
                 'Implementation-Version' : version,
                 'Class-Path': configurations.compile.collect { 'src/main/resources/' + it.getName() }.join(' '),
                 'Main-Class' : 'edu.gatech.oad.antlab.pkg1.AntLabMain'
    }

      destinationDir = file('.')
      archiveName = 'run.jar'
}